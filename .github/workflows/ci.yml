name: CI

on:
  push:
    branches: [staging, main]
    tags:
      - v*
  pull_request:
    branches: [staging, main, release/*]

jobs:
  test_build_deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        DISTRIBUTION: ['DISTRIBUTION_0']

    env:
      TEST_COVERAGE_FAIL_THRESHOLD: 10
      TEST_COVERAGE_WARNING_THRESHOLD: 50
      DEPLOYMENT_RECOVERY_TIMEOUT_SECONDS: 150
      AWS_APPLICATION_NAME: Account
      AWS_BUILD_ZIP_PATH: 'wire-account.zip'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set environment variables
        env:
          # DISTRIBUTIONS are saved in the format `distribution-{name}`
          DISTRIBUTION: ${{secrets[matrix.DISTRIBUTION]}}
        run: |
          echo "BRANCH_NAME=$(git branch --show-current)" >> $GITHUB_ENV
          echo "TAG=$(git tag --points-at ${{github.sha}})" >> $GITHUB_ENV
          echo "COMMIT_MESSAGE=$(git log --format=%B -n 1 ${{github.event.after}} | head -n 1)" >> $GITHUB_ENV
          echo "DISTRIBUTION=${DISTRIBUTION/distribution-/}" >> $GITHUB_ENV

      - name: Set TITLE
        env:
          PR_TITLE: ${{github.event.pull_request.title || env.COMMIT_MESSAGE}}
        run: echo "TITLE=$PR_TITLE" >> $GITHUB_ENV

      - name: Print environment variables
        env:
          GITHUB_CONTEXT: ${{toJson(github)}}
        run: |
          echo -e "BRANCH_NAME = ${BRANCH_NAME}"
          echo -e "TAG = ${TAG}"
          echo -e "TITLE = ${TITLE}"
          echo -e "COMMIT_MESSAGE = ${COMMIT_MESSAGE}"
          echo -e "GITHUB_CONTEXT = ${GITHUB_CONTEXT}"

      - name: Skip CI
        if: contains(env.TITLE || env.COMMIT_MESSAGE, '[skip ci]') || contains(env.TITLE || env.COMMIT_MESSAGE, '[ci skip]')
        uses: andymckay/cancel-action@0.4

      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{github.token}}

      - name: Yarn cache
        uses: c-hive/gha-yarn-cache@v2.1.0

      - name: Authenticate git clone
        env:
          GH_TOKEN: ${{secrets.OTTO_THE_BOT_GH_TOKEN}}
        run: echo -e "machine github.com\n  login ${GH_TOKEN}" > ~/.netrc

      - name: Install JS dependencies
        run: yarn --immutable

      - name: Test
        run: yarn test

      - name: Monitor coverage
        if: github.event_name == 'pull_request' && ! contains(github.event.pull_request.user.login, 'dependabot[bot]')
        uses: slavcodev/coverage-monitor-action@1.9.0
        with:
          github_token: ${{github.token}}
          coverage_path: 'coverage/clover.xml'
          threshold_alert: ${{env.TEST_COVERAGE_FAIL_THRESHOLD}}
          threshold_warning: ${{env.TEST_COVERAGE_WARNING_THRESHOLD}}
